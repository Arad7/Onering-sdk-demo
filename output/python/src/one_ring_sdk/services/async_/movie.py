# This file was generated by liblab | https://liblab.com/

from typing import Awaitable, Union
from .utils.to_async import to_async
from ..movie import MovieService
from ...models.utils.sentinel import SENTINEL
from ...models import MovieListResponse, GetMoviesSort, Order, MovieResponse


class MovieServiceAsync(MovieService):
    """
    Async Wrapper for MovieServiceAsync
    """

    def get_movies(
        self,
        page: int = SENTINEL,
        limit: int = SENTINEL,
        offset: int = SENTINEL,
        sort: GetMoviesSort = SENTINEL,
        order: Order = SENTINEL,
        _id: str = SENTINEL,
        name: str = SENTINEL,
        runtime_in_minutes: int = SENTINEL,
        budget_in_millions: float = SENTINEL,
        box_office_revenue_in_millions: float = SENTINEL,
        academy_award_nominations: int = SENTINEL,
        academy_award_wins: int = SENTINEL,
        rotten_tomatoes_score: float = SENTINEL,
    ) -> Awaitable[MovieListResponse]:
        return to_async(super().get_movies)(
            page,
            limit,
            offset,
            sort,
            order,
            _id,
            name,
            runtime_in_minutes,
            budget_in_millions,
            box_office_revenue_in_millions,
            academy_award_nominations,
            academy_award_wins,
            rotten_tomatoes_score,
        )

    def get_movie_by_id(self, id_: str) -> Awaitable[MovieResponse]:
        return to_async(super().get_movie_by_id)(id_)
