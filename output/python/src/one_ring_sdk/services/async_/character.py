# This file was generated by liblab | https://liblab.com/

from typing import Awaitable, Union
from .utils.to_async import to_async
from ..character import CharacterService
from ...models.utils.sentinel import SENTINEL
from ...models import CharacterListResponse, GetBooksSort, Order, CharacterResponse


class CharacterServiceAsync(CharacterService):
    """
    Async Wrapper for CharacterServiceAsync
    """

    def get_characters(
        self,
        page: int = SENTINEL,
        limit: int = SENTINEL,
        offset: int = SENTINEL,
        sort: GetBooksSort = SENTINEL,
        order: Order = SENTINEL,
        _id: str = SENTINEL,
        name: str = SENTINEL,
        race: str = SENTINEL,
        gender: str = SENTINEL,
        birth: str = SENTINEL,
        death: str = SENTINEL,
        realm: str = SENTINEL,
        hair: str = SENTINEL,
        height: str = SENTINEL,
        spouse: str = SENTINEL,
    ) -> Awaitable[CharacterListResponse]:
        return to_async(super().get_characters)(
            page,
            limit,
            offset,
            sort,
            order,
            _id,
            name,
            race,
            gender,
            birth,
            death,
            realm,
            hair,
            height,
            spouse,
        )

    def get_character_by_id(self, id_: str) -> Awaitable[CharacterResponse]:
        return to_async(super().get_character_by_id)(id_)
