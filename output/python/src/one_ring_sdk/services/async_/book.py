# This file was generated by liblab | https://liblab.com/

from typing import Awaitable, Union
from .utils.to_async import to_async
from ..book import BookService
from ...models.utils.sentinel import SENTINEL
from ...models import BookListResponse, GetBooksSort, Order, BookResponse


class BookServiceAsync(BookService):
    """
    Async Wrapper for BookServiceAsync
    """

    def get_books(
        self,
        page: int = SENTINEL,
        limit: int = SENTINEL,
        offset: int = SENTINEL,
        sort: GetBooksSort = SENTINEL,
        order: Order = SENTINEL,
        _id: str = SENTINEL,
        name: str = SENTINEL,
    ) -> Awaitable[BookListResponse]:
        return to_async(super().get_books)(page, limit, offset, sort, order, _id, name)

    def get_book_by_id(self, id_: str) -> Awaitable[BookResponse]:
        return to_async(super().get_book_by_id)(id_)
