# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.sentinel import SENTINEL


@JsonMap(
    {
        "runtime_in_minutes": "runtimeInMinutes",
        "budget_in_millions": "budgetInMillions",
        "box_office_revenue_in_millions": "boxOfficeRevenueInMillions",
        "academy_award_nominations": "academyAwardNominations",
        "academy_award_wins": "academyAwardWins",
        "rotten_tomatoes_score": "rottenTomatoesScore",
    }
)
class Movie(BaseModel):
    """Movie

    :param _id: The unique identifier of the movie., defaults to None
    :type _id: str, optional
    :param name: The name of the movie., defaults to None
    :type name: str, optional
    :param runtime_in_minutes: The runtime of the movie in minutes., defaults to None
    :type runtime_in_minutes: int, optional
    :param budget_in_millions: The budget of the movie in millions of dollars., defaults to None
    :type budget_in_millions: float, optional
    :param box_office_revenue_in_millions: The box office revenue of the movie in millions of dollars., defaults to None
    :type box_office_revenue_in_millions: float, optional
    :param academy_award_nominations: The number of Academy Award nominations for the movie., defaults to None
    :type academy_award_nominations: int, optional
    :param academy_award_wins: The number of Academy Award wins for the movie., defaults to None
    :type academy_award_wins: int, optional
    :param rotten_tomatoes_score: The Rotten Tomatoes score of the movie., defaults to None
    :type rotten_tomatoes_score: float, optional
    """

    def __init__(
        self,
        _id: str = SENTINEL,
        name: str = SENTINEL,
        runtime_in_minutes: int = SENTINEL,
        budget_in_millions: float = SENTINEL,
        box_office_revenue_in_millions: float = SENTINEL,
        academy_award_nominations: int = SENTINEL,
        academy_award_wins: int = SENTINEL,
        rotten_tomatoes_score: float = SENTINEL,
        **kwargs
    ):
        """Movie

        :param _id: The unique identifier of the movie., defaults to None
        :type _id: str, optional
        :param name: The name of the movie., defaults to None
        :type name: str, optional
        :param runtime_in_minutes: The runtime of the movie in minutes., defaults to None
        :type runtime_in_minutes: int, optional
        :param budget_in_millions: The budget of the movie in millions of dollars., defaults to None
        :type budget_in_millions: float, optional
        :param box_office_revenue_in_millions: The box office revenue of the movie in millions of dollars., defaults to None
        :type box_office_revenue_in_millions: float, optional
        :param academy_award_nominations: The number of Academy Award nominations for the movie., defaults to None
        :type academy_award_nominations: int, optional
        :param academy_award_wins: The number of Academy Award wins for the movie., defaults to None
        :type academy_award_wins: int, optional
        :param rotten_tomatoes_score: The Rotten Tomatoes score of the movie., defaults to None
        :type rotten_tomatoes_score: float, optional
        """
        if _id is not SENTINEL:
            self._id = _id
        if name is not SENTINEL:
            self.name = name
        if runtime_in_minutes is not SENTINEL:
            self.runtime_in_minutes = runtime_in_minutes
        if budget_in_millions is not SENTINEL:
            self.budget_in_millions = budget_in_millions
        if box_office_revenue_in_millions is not SENTINEL:
            self.box_office_revenue_in_millions = box_office_revenue_in_millions
        if academy_award_nominations is not SENTINEL:
            self.academy_award_nominations = academy_award_nominations
        if academy_award_wins is not SENTINEL:
            self.academy_award_wins = academy_award_wins
        if rotten_tomatoes_score is not SENTINEL:
            self.rotten_tomatoes_score = rotten_tomatoes_score
        self._kwargs = kwargs
